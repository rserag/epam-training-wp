- hosts: webservers
  tasks:
   - name: 'add php repo'
     apt_repository:
      repo: 'ppa:ondrej/php'
     become: yes

   - name: 'update apt cache'
     apt: update_cache=yes
     become: yes

   - name: 'install nginx'
     apt:
      name: nginx
      state: present
     become: yes

   - name: 'install git'
     apt:
      name: git
      state: present
     become: yes

   - name: 'install php with extensions'
     apt:
      name:
       - php7.4
       - php7.4-fpm
       - php7.4-mysql
       - php7.4-gd
       - php-ssh2
       - php7.4-mcrypt
      state: present
     become: yes

   - name: 'install mysql'
     apt:
      name:
       - mysql-server
       - python3-mysqldb
     become: yes

   - name: 'config php fpm'
     replace: 'dest=/etc/php/7.4/fpm/php.ini regexp="(;cgi.fix_pathinfo=1)" replace="cgi.fix_pathinfo=0"'
     become: yes

   - name: 'update nginx conf for wp and php'
     template: 'src=../templates/default-site.conf dest=/etc/nginx/sites-available/{{server_name}} owner=www-data group=www-data mode=0644'
     become: yes

   - name: 'enable nginx config'
     file: 'src=/etc/nginx/sites-available/{{server_name}} dest=/etc/nginx/sites-enabled/{{server_name}} owner=www-data group=www-data state=link'
     become: yes

   - name: 'config nginx for php'
     template: src=../templates/nginx-wp-common.conf dest=/etc/nginx/nginx-wp-common.conf owner=www-data group=www-data mode=0644
     become: yes

   - name: 'restart nginx'
     service: 'name=nginx state=restarted'
     become: yes

   - name: 'start mysql'
     action: 'service name=mysql state=started'

   - name: 'set root password'
     mysql_user:
      name: root
      password: '{{ mysql_root_password }}'
      priv: '*.*:ALL,GRANT'
     become: yes

   - name: 'set mysql config'
     template: 'src=../templates/.my.cnf dest=/root/.my.cnf owner=root mode=0600'
     become: yes

   - name: 'create mysql user'
     mysql_user:
      name: '{{ wp_user }}'
      password: '{{ wp_pass }}'
      priv: '*.*:ALL'
     become: yes

   - name: 'create mysql db'
     mysql_db:
      name: '{{ wp_db_name }}'
      state: present
     become: yes

   - name: 'delete anon mysql users for host'
     action: 'mysql_user user="" host="{{ server_name }}" state="absent"'
     become: yes

   - name: 'delete anon mysql users for localhost'
     action: 'mysql_user user="" state="absent"'
     become: yes

   - name: 'delete test db in mysql'
     action: 'mysql_db db=test state=absent'
     become: yes

   - name: 'update mysql root for all root accs'
     mysql_user: 'name=root host={{ server_name }} password={{ mysql_root_password }} priv=*.*:ALL,GRANT'
     become: yes

   - name: 'create webroot'
     file:
      state: directory
      path: /var/www
      owner: root
      group: root
      mode: 0755
     become: yes

   - name: 'check wp directory'
     stat: path=/var/www/{{ server_name }}
     register: check_path

   - name: 'get wp'
     get_url:
      url: https://wordpress.org/wordpress-{{ wp_version }}.tar.gz 
      dest: /tmp/wordpress-{{ wp_version }}.tar.gz
     become: yes
     when: not check_path.stat.exists

   - name: 'extract wp'
     unarchive: 
      src: /tmp/wordpress-{{ wp_version }}.tar.gz
      dest: /tmp
      owner: www-data
      group: www-data
      copy: no
     become: yes
     when: not check_path.stat.exists

   - name: 'move wp'
     command: 'mv /tmp/wordpress /var/www/{{ server_name }}'
     become: yes
     when: not check_path.stat.exists

   - name: 'get random salts'
     uri:
      url: 'https://api.wordpress.org/secret-key/1.1/salt/'
      return_content: yes
      method: GET
     register: 'wp_salt'

   - name: 'create wp config'
     template: 'src=../templates/wp-config.php dest=/var/www/{{ server_name }}/wp-config.php'
     become: yes

   - name: 'update wp config'
     lineinfile:
      dest: '/var/www/{{ server_name }}/wp-config.php'
      regexp: '{{ item.regexp }}'
      line: '{{ item.line }}'
     loop:
      - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{ wp_db_name }}');"}
      - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{ wp_user }}');"}
      - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{ wp_pass }}');"}
     become: yes
